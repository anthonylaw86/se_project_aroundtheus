!function(){"use strict";var e=class{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this.id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=i}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link})))}removeCard(){this._element.remove(),this._element=null}updateIsLiked(e){this.isLiked=e,this.renderLikes()}renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._setEventListeners(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this.renderLikes(),this._element}};class t{initialCards=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}];settings={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visable"};validationSettings={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}}new t;var s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}var i=class extends r{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._saveButton=this._popupElement.querySelector(".modal__button")}setSubmitAction(e){this._handleFormSubmit=e}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e){this._saveButton.textContent=e?"Saving...":"Save"}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),console.log(t)}))}reset(){this._popupForm.reset()}};class n{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}checkServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this.checkServerResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this.checkServerResponse)}editUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this.checkServerResponse)}createNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this.checkServerResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.checkServerResponse)}isLiked(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this.checkServerResponse)}unliked(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this.checkServerResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this.checkServerResponse)}}new n({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"fc353c45-617d-4c7e-a1fb-ad5ad438ee63","Content-Type":"application/json"}});const o=new n({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"fc353c45-617d-4c7e-a1fb-ad5ad438ee63","Content-Type":"application/json"}}),a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#add-card-modal"),c=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),l.querySelector(".modal__form")),d=document.querySelector(".profile__image"),u=document.querySelector(".profile__add-button"),h=document.querySelector("#profile-edit-button"),_=document.querySelector("#profile-title-input"),p=document.querySelector("#profile-description-input"),m=(c.querySelector(".modal__input_type_title"),c.querySelector(".modal__input_type_url"),new t),v=a.querySelector(".modal__form"),S=new s(m.settings,v),k=new s(m.settings,c);function b(e){e.isLiked?o.unliked(e.id).then((t=>{e.updateIsLiked(t.isLiked)})).catch((e=>{console.error(e)})):o.isLiked(e.id).then((t=>{e.updateIsLiked(t.isLiked)})).catch((e=>{console.error(e)}))}function f(e){w.open(),w.setSubmitAction((()=>{o.deleteCard(e.id).then((()=>{e.removeCard(),w.close()})).catch((e=>{console.error(e)}))}))}function L(t){return new e(t,"#card-template",g,f,b).getView()}S.enableValidation(),k.enableValidation();const E=new class{constructor(e,t){let{items:s,renderer:r}=e;this._renderer=r,this._container=document.querySelector(t),this._items=s}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}setItems(e){this._items=e}}({items:[],renderer:e=>{const t=L(e);E.addItem(t)}},".cards__list");function g(e){y.open(e)}o.getInitialCards().then((e=>{E.setItems(e),E.renderItems()})).catch((e=>{console.error(e)}));const y=new class extends r{open(e){let{name:t,link:s}=e;this._popupElement.querySelector(".modal__image-title").textContent=t;const r=this._popupElement.querySelector(".modal__image");r.src=s,r.alt=t,super.open()}}({popupSelector:"#preview-image-modal"});y.setEventListeners();const C=new i({popupSelector:"#add-card-modal",handleFormSubmit:e=>{!function(e){let{name:t,link:s}=e;o.createNewCard(t,s).then((e=>{const t=L(e);E.addItem(t),C.renderLoading(!0),C.close(),C.reset()})).catch((e=>{console.error(e)}))}(e)}});C.setEventListeners();const w=new i({popupSelector:"#delete-card-modal"});w.setEventListeners();const I=new class{constructor(e){let{profileTitleSelector:t,profileDescriptionSelector:s,avatarSelector:r}=e;this._title=document.querySelector(t),this._description=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{title:this._title.textContent,description:this._description.textContent}}setUserInfo(e){let{title:t,description:s}=e;this._title.textContent=t,this._description.textContent=s}setAvatar(e){this._avatar.src=e}}({profileTitleSelector:".profile__title",profileDescriptionSelector:".profile__description",avatarSelector:".profile__image"});o.getUserInfo(I._title,I._description).then((e=>{I.setUserInfo({title:e.name,description:e.about}),I.setAvatar(e.avatar)})).catch((e=>{console.error(e)}));const q=new i({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{o.editUserInfo({name:e.title,about:e.description}).then((t=>{I.setUserInfo({title:t.name,description:t.about}),q.renderLoading(!0),function(e){let{title:t,description:s}=e;q.close()}({title:e.name,description:e.about}),o.getUserInfo(I._title,I._description)})).catch((e=>{console.error(e)}))}}),B=new i({popupSelector:"#update-avatar-modal",handleFormSubmit:e=>{o.updateAvatar({avatar:e.link}).then((e=>{console.log(e),I.setAvatar(e.avatar),B.renderLoading(!0),B.close()})).catch((e=>{console.error(e)}))}});q.setEventListeners(),d.addEventListener("click",(()=>{B.open()})),B.setEventListeners(),u.addEventListener("click",(()=>{k.toggleButtonState(),C.open()})),h.addEventListener("click",(()=>{const e=I.getUserInfo();_.value=e.title,p.value=e.description,q.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,