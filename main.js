!function(){"use strict";var e=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._element.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDeleteCard())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({name:this._name,link:this._link})))}_handleDeleteCard(){this._element.remove(),this._element=null}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._setEventListeners(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._element}};class t{initialCards=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}];settings={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visable"};validationSettings={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}}new t;var s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}var i=class extends n{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._inputList=this._popupElement.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),console.log(t)}))}reset(){this._popupForm.reset()}};const o=document.querySelector("#profile-edit-modal"),r=document.querySelector("#add-card-modal"),l=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),r.querySelector(".modal__form")),a=document.querySelector(".profile__add-button"),c=document.querySelector("#profile-edit-button"),u=document.querySelector("#profile-title-input"),_=document.querySelector("#profile-description-input"),d=(l.querySelector(".modal__input_type_title"),l.querySelector(".modal__input_type_url"),new t),m=o.querySelector(".modal__form"),p=new s(d.settings,m),h=new s(d.settings,l);function S(t){return new e(t,"#card-template",E).getView()}p.enableValidation(),h.enableValidation();const v=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderer=n,this._container=document.querySelector(t),this._items=s}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:d.initialCards,renderer:e=>{const t=S(e);v.addItem(t)}},".cards__list");function E(e){g.open(e)}const g=new class extends n{open(e){let{name:t,link:s}=e;this._popupElement.querySelector(".modal__image-title").textContent=t;const n=this._popupElement.querySelector(".modal__image");n.src=s,n.alt=t,super.open()}}({popupSelector:"#preview-image-modal"});g.setEventListeners();const y=new i({popupSelector:"#add-card-modal",handleFormSubmit:e=>{!function(e){let{name:t,link:s}=e;const n=S({name:t,link:s});v.addItem(n),y.close(),y.reset()}(e)}});y.setEventListeners();const f=new i({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{!function(e){let{title:t,description:s}=e;b.setUserInfo({title:t,description:s}),f.close()}(e)}});f.setEventListeners();const b=new class{constructor(e){let{profileTitleSelector:t,profileDescriptionSelector:s}=e;this._title=document.querySelector(t),this._description=document.querySelector(s)}getUserInfo(){return{title:this._title.textContent,description:this._description.textContent}}setUserInfo(e){let{title:t,description:s}=e;this._title.textContent=t,this._description.textContent=s}}({profileTitleSelector:".profile__title",profileDescriptionSelector:".profile__description"});c.addEventListener("click",(()=>{const e=b.getUserInfo();u.value=e.title,_.value=e.description,f.open()})),v.renderItems(),a.addEventListener("click",(()=>{h.toggleButtonState(),y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,